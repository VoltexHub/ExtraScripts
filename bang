local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local gui = Instance.new("ScreenGui", Players.LocalPlayer:WaitForChild("PlayerGui"))

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0.25, 0, 0.08, 0)
mainFrame.Position = UDim2.new(0.01, 0, 0.01, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

local inputBox = Instance.new("TextBox", mainFrame)
inputBox.Size = UDim2.new(0.6, 0, 0.5, 0)
inputBox.PlaceholderText = "Enter username or display name"
inputBox.TextColor3 = Color3.new(1, 1, 1)
inputBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

local trackButton = Instance.new("TextButton", mainFrame)
trackButton.Size = UDim2.new(0.4, 0, 0.5, 0)
trackButton.Position = UDim2.new(0.6, 0, 0, 0)
trackButton.Text = "âœ”"
trackButton.TextColor3 = Color3.new(1, 1, 1)
trackButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)

local closeButton = Instance.new("TextButton", mainFrame)
closeButton.Size = UDim2.new(1, 0, 0.5, 0)
closeButton.Position = UDim2.new(0, 0, 0.5, 0)
closeButton.Text = "Destroy UI"
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)

local isTracking = false
local target = nil
local direction = 1
local followDistance = 2
local followSpeed = 20
local lastPos = nil

local function getPlayerByName(name)
	for _, p in ipairs(Players:GetPlayers()) do
		if p.Name:lower() == name:lower() or p.DisplayName:lower() == name:lower() then
			return p
		end
	end
end

trackButton.MouseButton1Click:Connect(function()
	target = getPlayerByName(inputBox.Text)
	isTracking = target ~= nil
	print(isTracking and ("Tracking " .. target.Name) or "Player not found.")
end)

closeButton.MouseButton1Click:Connect(function()
	gui:Destroy()
end)

RunService.Heartbeat:Connect(function(dt)
	if not isTracking or not target then return end

	local localChar = Players.LocalPlayer.Character
	local targetChar = target.Character
	if not (localChar and targetChar) then return end

	local root = localChar:FindFirstChild("HumanoidRootPart")
	local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
	if not (root and targetRoot) then return end

	local pos = targetRoot.Position
	local dir = targetRoot.CFrame.LookVector

	lastPos = lastPos or pos
	local basePos = pos - dir * followDistance
	local offset = dir * (direction * followDistance * 0.5)
	local targetPos = basePos + offset

	local newPos = root.Position:Lerp(targetPos, followSpeed * dt)
	root.CFrame = CFrame.new(newPos, pos)

	if (newPos - basePos).Magnitude >= followDistance * 0.5 then
		direction = -direction
	end

	lastPos = pos
end)
