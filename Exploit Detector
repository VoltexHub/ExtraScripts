local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local TPService = game:GetService("TeleportService")
local placeId = game.PlaceId

function warn1()
	game.StarterGui:SetCore("SendNotification", {
Title = "Notification",
Text = "Exploiter Detected",
Duration = 3,
})

warn = warn1()

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "CoreGul"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)

local tabPanel = Instance.new("Frame", mainFrame)
tabPanel.Size = UDim2.new(0, 100, 1, 0)
tabPanel.Position = UDim2.new(0, 0, 0, 0)
tabPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", tabPanel).CornerRadius = UDim.new(0, 8)

local contentPanel = Instance.new("Frame", mainFrame)
contentPanel.Size = UDim2.new(1, -120, 1, -20)
contentPanel.Position = UDim2.new(0, 110, 0, 10)
contentPanel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Instance.new("UICorner", contentPanel).CornerRadius = UDim.new(0, 8)

local function clearContent()
	for _, child in ipairs(contentPanel:GetChildren()) do
		if not child:IsA("UICorner") then
			child:Destroy()
		end
	end
end

local function createTabButton(text, posY)
	local button = Instance.new("TextButton", tabPanel)
	button.Size = UDim2.new(0.9, 0, 0, 30)
	button.Position = UDim2.new(0, 5, 0, posY)
	button.Text = text
	button.TextColor3 = Color3.new(1, 1, 1)
	button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Instance.new("UICorner", button).CornerRadius = UDim.new(0, 8)
	return button
end

local MAX_SPEED = 50
local MAX_JUMP = 100
local flyEnabled, walkEnabled, jumpEnabled = false, false, false

local function scanPlayers()
	for _, p in pairs(Players:GetPlayers()) do
		if p.Character and p.Character:FindFirstChild("Humanoid") then
			local h = p.Character.Humanoid
			if walkEnabled and h.WalkSpeed > MAX_SPEED then
				warn(p.Name .. " WalkSpeed above limit! (" .. h.WalkSpeed .. " > " .. MAX_SPEED .. ")")
			end
			if jumpEnabled and h.JumpPower > MAX_JUMP then
				warn(p.Name .. " JumpPower above limit! (" .. h.JumpPower .. " > " .. MAX_JUMP .. ")")
			end
			if flyEnabled and h.FloorMaterial == Enum.Material.Air and h:GetState() ~= Enum.HumanoidStateType.Freefall and not h.Sit then
				warn(p.Name .. " might be flying!")
			end
		end
	end
end

local function createToggleButton(text, posY, toggleVar, callback)
	local button = Instance.new("TextButton", contentPanel)
	button.Size = UDim2.new(0.9, 0, 0, 30)
	button.Position = UDim2.new(0, 10, 0, posY)
	button.Text = text .. " ❌"
	button.TextColor3 = Color3.new(1, 1, 1)
	button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)

	button.MouseButton1Click:Connect(function()
		toggleVar.value = not toggleVar.value
		button.Text = text .. (toggleVar.value and " ✔️" or " ❌")
		if callback then callback(toggleVar.value) end
	end)

	return button
end

local function createSlider(labelText, minVal, maxVal, defaultVal, onChange, offsetIndex)
	local yOffset = offsetIndex * 70

	local label = Instance.new("TextLabel", contentPanel)
	label.Size = UDim2.new(1, -20, 0, 20)
	label.Position = UDim2.new(0, 10, 0, yOffset)
	label.Text = labelText .. ": " .. tostring(defaultVal)
	label.TextColor3 = Color3.new(1, 1, 1)
	label.BackgroundTransparency = 1
	label.TextXAlignment = Enum.TextXAlignment.Left

	local slider = Instance.new("TextButton", contentPanel)
	slider.Size = UDim2.new(1, -20, 0, 10)
	slider.Position = UDim2.new(0, 10, 0, yOffset + 25)
	slider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	slider.Text = ""
	Instance.new("UICorner", slider).CornerRadius = UDim.new(0, 6)

	local fill = Instance.new("Frame", slider)
	fill.Size = UDim2.new((defaultVal - minVal) / (maxVal - minVal), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
	fill.BorderSizePixel = 0
	Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 6)

	local dragging = false
	slider.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
	end)
	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
	end)
	UIS.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local relX = math.clamp((input.Position.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1)
			local value = math.floor(minVal + (maxVal - minVal) * relX)
			fill.Size = UDim2.new(relX, 0, 1, 0)
			label.Text = labelText .. ": " .. tostring(value)
			onChange(value)
		end
	end)
	fill.Parent = slider
end

function hopServer()
    TPService:Teleport(placeId, player)
end

local function loadMainTab()
	clearContent()
	createToggleButton("Server Hop - On Detect", 10, { value = false }, function(state)
    if state then
        hopServer()
    end
end)

	createToggleButton("Fly Detector", 50, { value = flyEnabled }, function(val) flyEnabled = val end)
	createToggleButton("Walkspeed Detector", 90, { value = walkEnabled }, function(val) walkEnabled = val end)
	createToggleButton("Jump Detector", 130, { value = jumpEnabled }, function(val) jumpEnabled = val end)

	task.spawn(function()
		while true do
			task.wait(2)
			scanPlayers()
		end
	end)
end

local function loadSettingsTab()
	clearContent()
	createSlider("Allowed WalkSpeed (Detection)", 16, 200, MAX_SPEED, function(val)
		MAX_SPEED = val
	end, 0)
	createSlider("Allowed JumpPower (Detection)", 50, 250, MAX_JUMP, function(val)
		MAX_JUMP = val
	end, 1)
end

local function loadUISettingsTab()
	clearContent()

	createToggleButton("Delete GUI", 10, { value = false }, function(state)
		if state then
			screenGui:Destroy()
			flyEnabled, walkEnabled, jumpEnabled = false, false, false
		end
	end)

	createToggleButton("GUI Toggle Key", 50, { value = false }, function(state)
		local guiVisible = true
UIS.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.RightShift then
        guiVisible = not guiVisible
        screenGui.Enabled = guiVisible
    end
end)

local mainTabButton = createTabButton("Main", 10)
local settingsTabButton = createTabButton("Settings", 50)
local UIsettingsTabButton = createTabButton("UI Settings", 90)

mainTabButton.MouseButton1Click:Connect(loadMainTab)
settingsTabButton.MouseButton1Click:Connect(loadSettingsTab)
UIsettingsTabButton.MouseButton1Click:Connect(loadUISettingsTab)

loadMainTab()
